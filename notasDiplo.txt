swift

iBooks
Intro to Development Apps with Swift
Development Apps with Swift

germans@unam.com

Programación orientada a protocolos

LLVM. -> Low level virtual machine

Bitcode -> ABI (Application Binary Interface)

CISC -> complex instruction set computer

RISC -> reduced

ARM -> Advanced RISC machine

Bionic ->

cmd + space -> spotlight

* Tipos de dato:
- Int
- String
- Double
- float
- bool

* nulo -> nil, auscencia de valor

* Operadores

Libro: Deitel

ARC Automatic Reference Counting

----------------- 10/08/19 -------------------------
Componentes Xcode:

AppDelegate -> todo lo que se manda a llamar cuando se lanza la aplicacion
ViewController -> controlador d ela aplicacion
mainStoryBoard -> vista de la aplicacion, se lanza despues de launch
Assets -> carpeta donde vienen todos los recursos como graficos, imagenes, etc
Launch -> lo que primero se lanza para la aplicacion
info.plist -> permisos y accesos que se pide al usuario
Products -> por si se quiere importar bibliotecas de alguien mas


1.0.1 cambios que no afectan a la aplicacion
1.1.0 -> cambios en el desempeño pero no en la funcionalidad
2.1.0 -> cambios significativos

first responder -> para ver que componente va a responder primero
exit -> para salir de la vista actual y regresar a la anterior

Cmd + d -> copiar componente

- clase se usa si se necesita que algun dato exista en toda la aplicacion
- struct se usa para guardar datos


------------------- 16/08 -------------------
Tap bar -> vistas independientes
Navigation Bar -> vistas que una depende de la anterior


cracking the code
historias de un desarrollador
ios Development E-book
- Sundell -> tipo de que tiene un blog
- Apple Coding
- 9to5 -> predicciones de apple
- objc.io -> sitio y libros muy buenos


----------------
Dos tipos de tablas:
- UITableViewController
- embebido dentro de mi view controller

Delegate (delegado) -> es un patrón de diseño

Protocolos:
UITableViewDataSource -> contiene los datos de la tabla, implementado en Swift, por lo tanto es forzoso aplicar los métodos
UITableViewDelegate -> El comportamiento de la tabla, implementado en objective-C, por lo tanto es opcional implementar métodos
indexPath -> objeto que te sirve para saber en que renglon te encuentras (posicion en que te encuentras)

XIB -> external interface builder
https://goalkicker.com

--------------- 23/08

closures -> funciones anónimas

UITableViewController -> ya contiene los protocolos DataSource y Delegate
UITableView -> es embebido por lo tanto tienes que utilizar

UIAlertController -> - actionSheet -> sale de abajo y muestra las opciones
                     - alert -> es una alerta normal en medio de la vista

present -> funcion para mostrar vistas

ContextualAction -> para deslizar en un table y hacer una acción
  - leading -> de derecha a izquierda
  - trailing -> de izquierda a derecha

Contructor falible -> si cumples con los requerimientos te regreso el objeto, sino regresa un nil

- se tienen que levantar pedidos aunque no tenga red y que se manden al servidor cuando tengan red

---------------------- 30/08
REST
    - POST
    - GET
    - UPDATE
    - DELETE

https://jsonformatter.org/json-pretty-print

-------------------------- 31/08


usingSpringWithDamping -> animacion que hace de amortiguacion

Clase.self -> como esta estructurada nuestra clase

DidSet -> se va a echar a andar cuando el valor ha sido asignado
WillSet -> se va a echar a andar cuando apenas se va a asignar

SDImage -> servicio de cache
AlamoFire -> para manejo de headers
